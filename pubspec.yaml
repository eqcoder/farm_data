name: farm_data
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.7.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  cupertino_icons: ^1.0.2
  desktop_window: ^0.4.0
  firebase_core: ^3.12.1 # Firebase 초기화
  firebase_storage: ^12.4.4 # Firebase Storage
  image_picker: ^1.1.2 # 이미지 선택
  file_picker: ^9.2.0 # 파일 선택 (로컬 파일 시스템)
  googleapis: ^14.0.0
  googleapis_auth: ^1.4.1
  path_provider: ^2.1.1
  google_sign_in: ^6.3.0
  http: ^1.3.0
  path: ^1.9.1
  window_manager: ^0.4.3
  flutter_dotenv: ^5.2.1
  google_generative_ai: ^0.4.6
  image: ^4.0.15
  excel: ^4.0.6
  sqflite: ^2.4.2
  url_launcher: ^6.3.1
  intl: ^0.20.2
  flutter_secure_storage: ^9.2.4
  provider: ^6.1.2  
  flutter_platform_widgets: ^8.0.0
  camera: ^0.11.1
  permission_handler: ^11.4.0
  shared_preferences: ^2.5.2

dev_dependencies:
  flutter_test:
    sdk: flutter
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0
  msix: ^3.16.8

msix_config:
  display_name: TEST
  publisher_display_name: TEST
  certificate_path: C:\Program Files\OpenSSL-Win64\bin\CERTIFICATE.pfx
  certificate_password: 1234
  app_installer:
    publish_folder_path: C:\Program Files\OpenSSL-Win64\bin\
    hours_between_update_checks: 0
    automatic_background_task: true
    show_prompt: true
  identity_name: company.suite.flutterapp
  msix_version: 1.0.0.0
  logo_path: C:\path\to\logo.png
  capabilities: internetClient, location, microphone, webcam
  install_certificate: false


# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  assets:
    - .env
  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
